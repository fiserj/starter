#pragma once

#ifndef BGFX_EMBEDDED_SHADER_H_HEADER_GUARD
#   include <bgfx/embedded_shader.h>
#endif

#ifndef EMPTY_SHADER
#   define EMPTY_SHADER { 'V', 'S', 'H', 5, 0, 0, 0, 0, 0, 0 }
#endif

// DX9.
#if __has_include("dx9/${SHADER_NAME}_dx9.h")
#   include "dx9/${SHADER_NAME}_dx9.h"
#else
static const uint8_t ${SHADER_NAME}_dx9[10] = EMPTY_SHADER;
#endif

// DX11.
#if __has_include("dx11/${SHADER_NAME}_dx11.h")
#   include "dx11/${SHADER_NAME}_dx11.h"
#else
static const uint8_t ${SHADER_NAME}_dx11[10] = EMPTY_SHADER;
#endif

// DX12.
#if __has_include("dx11/${SHADER_NAME}_dx12.h")
#   include "dx11/${SHADER_NAME}_dx12.h"
#else
static const uint8_t ${SHADER_NAME}_dx12[10] = EMPTY_SHADER;
#endif

// ESSL.
#if __has_include("essl/${SHADER_NAME}_essl.h")
#   include "essl/${SHADER_NAME}_essl.h"
#else
static const uint8_t ${SHADER_NAME}_essl[10] = EMPTY_SHADER;
#endif

// GLSL.
#if __has_include("glsl/${SHADER_NAME}_glsl.h")
#   include "glsl/${SHADER_NAME}_glsl.h"
#else
static const uint8_t ${SHADER_NAME}_glsl[10] = EMPTY_SHADER;
#endif

// Metal.
#if __has_include("mtl/${SHADER_NAME}_mtl.h")
#   include "mtl/${SHADER_NAME}_mtl.h"
#else
static const uint8_t ${SHADER_NAME}_mtl[10] = EMPTY_SHADER;
#endif

// PSSL.
extern const uint8_t  * ${SHADER_NAME}_pssl;
extern const uint32_t   ${SHADER_NAME}_pssl_size;

// SPIR-V.
#if __has_include("spv/${SHADER_NAME}_spv.h")
#   include "spv/${SHADER_NAME}_spv.h"
#else
static const uint8_t ${SHADER_NAME}_spv[10] = EMPTY_SHADER;
#endif
